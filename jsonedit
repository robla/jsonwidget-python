#!/usr/bin/python
# jsonedit - urwid-based JSON editor
#
# Copyright (c) 2010, Rob Lanphier
# All rights reserved.  
# Licensed under BSD-style license.  See LICENSE.txt for details.

import json
import urwid.curses_display
import urwid
import optparse
import sys

from jsonschema import *
from jsonforms_urwid import *

# Force monochrome for now.  Will probably revisit when 0.9.9 is widely 
# deployed
urwid.curses_display.curses.has_colors = lambda : False

# Create a JsonNode, then pass it to the EntryNode.  EntryNode takes over at 
# this point, saving the json file as appropriate
def show_form(schemafile, jsonfile):
    # a full json object is the root node of a tree of JsonNodes
    jsonobj=JsonNode(filename=jsonfile, schemafile=schemafile)
    form=EntryForm(jsonobj, program_name="jsonedit 0.1pre")
    form.run()

# standard option parsing stuff here
def main():
    usage = "usage: %prog [options] arg"
    parser = optparse.OptionParser(usage)
    parser.add_option("-s", "--schema", dest="schema",
                      default="datatype-example-schema.json",
                      help="use this schema to build the form")
    parser.add_option("--tracebacks", dest="tracebacks",
                      default=False,
                      help="See full tracebacks")
    (options, args) = parser.parse_args()
    if not options.tracebacks:
        sys.tracebacklimit=1000

    if len(args) > 1:
        parser.error("Too many arguments.  Just one .json file at a time, please.")
    if len(args)==1:
        jsonfile = args[0]
    else:
        jsonfile = None
    show_form(options.schema, jsonfile)

if __name__ == "__main__":
    main()


