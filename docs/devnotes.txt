== bumping the version ==

*  jsonwidget/__init__.py
*  setup.py

== Generating a changelog ==

export VERSION=(version you are packaging)
export LASTVERSION=(previous version)

echo "python-jsonwidget (${VERSION}) karmic; urgency=low" > /tmp/changelog
echo >> /tmp/changelog
hg log -rtip:${LASTVERSION} --template '  * {desc}\n' >> /tmp/changelog
echo >> /tmp/changelog
echo " -- Rob Lanphier <robla@robla.net>  `date -R`" >> /tmp/changelog


== Creating a .deb package ==

# Have a clean checkout so that the manifest wildcards don't pick up anything
# screwy
cd tmp
hg clone .. jsonwidget-python
cd jsonwidget-python
python setup.py sdist
# Run the following commands:
export VERSION=(version you are packaging)
python setup.py sdist
cd dist
tar zxvf jsonwidget-${VERSION}.tar.gz
mv jsonwidget-${VERSION} python-jsonwidget-${VERSION}
cd python-jsonwidget-${VERSION}
# use "-uc -us" to skip signing
# -S is "source only"
dpkg-buildpackage -rfakeroot -S
# build a binary
dpkg-buildpackage -rfakeroot
# Test the binary
sudo dpkg -i ....

== uploading to pypi ==

# Have a clean checkout so that the manifest wildcards don't pick up anything
# screwy
python setup.py sdist
# if all looks good, then upload:
python setup.py sdist upload -s



== Uploading to the PPA ==

dput ppa:robla/ppa python-jsonwidget_${VERSION}_source.changes




